L'INJECTION
    Se fait dans un input avec écriture de code (requête SQL, code javascript, html,...).

    PROTECTION :
        - Avec pare-feu d'application web ou WAF,
        - Avec la validation des entrèes (par exemple, l'input ne contient pas de signe '=' ou "'" ou '"'),
        - Avec des requêtes préparées (pas de connection directe à la base de données),
        - En SQL, éviter les requêtes dynamique et si requête dynamique, utiliser la fonction sp_executesql(),
        - Utiliser un Object Relational Mapper (ORM) : pg et knex avec javascript
        - Utiliser l'API OWASP - ESAPI

L'AUTHENTIFICATION
    C'est un piratage de session par :
    - force brute = l’utilisation d’une multitude de couples identifiant/mot de passe de manière automatique, jusqu’à obtenir le bon
    - credential stuffing = attaque utilisée pour essayer toutes les combinaisons de noms d'utilisateur et de mots de passe (volés), jusqu'à ce que le pirate s'authentifie
    - les cookies sont aussi des failles, surtoutles cookies de session

    PROTECTION :
        - Les cookies de session (attention pas les cookies de suivi) doivent :
            * Etre chiffrés lors de la transmission via HTTPS
            * ne pas stocker d'informations d'identification en texte clair
            * avoir une date d'expiration
        - Exiger un mot de passe fort, c'est-à-dire contenant des majuscules, des minuscules, des chiffres et des caractères spéciaux
        - Exiger un changement de mot de passe tous les X mois par exemple
        - Verrouillage de compte après X tentatives de connection non-authorisé
        - Changer ou désactiver les comptes par défaut
        - Implémenter une connection forte, c’est-à-dire avec plusieurs facteurs d’authentification, comme la validation par SMS ou par mail, par exemple
        - Protégez les identifiants de session au moyen d’algorithme de chiffrement

        - Voici quelques conseils pour vous aider à développer vos mécanismes d'identification et de validation de session :
            * Ne mettez pas l’ID de session dans l’URL ;
            * Limitez la durée de l'ID de session ;
            * Modifiez le nom d'ID de session par défaut.

LES DONNEES EN TRANSIT
    Un piratage se positionne entre le serveur et l'ordinateur client pour intercepter les flux d'échange = L'attaque de l'homme du milieu (MITM)

    PROTECTION :
        - Cela passe par la sécurisation de la couche de transport lors de l’échange des données => HTTPS avec certificat SSL
        - Sécurisez les requêtes GET et POST
        - Le CORS (Cross-Origin Ressource Sharing)

    Bonnes Pratiques :
        1- N'utilisez GET que pour récupérer des informations.
        2- Utilisez POST pour les informations qui seront manipulées.
        3- Toutes les requêtes POST doivent utiliser HTTPS/SSL pour s'assurer que le corps est chiffré.
        4- Vérifiez tous les modules tiers que vous utilisez pour créer des requêtes GET/POST et utilisez HTTPS pour chacun d'entre eux !

LES DONNEES STOCKEES
    Un pirate peut s'il arrive à se connecter, récupérer des données sur la base de données comme les mots de passe

    PROTECTION :
        - Hasher les mots de passe sur la base de données (bcrypt ou ARgon2 [recommandé par l'OWASP pour Argon2])
        - Utiliser le principe du moindre privilège sur les comptes de la base de données
        - Cacher les données sensibles dans la db par :
            * anonymisation (recommandé par OWASP)
            * pseudonymisation (recommandé par RGPD)
            * minimisation des données (respect des RGPD)
            => DEUX MOYENs, le masquage dynamique des données ou le clonage et génération des masques de données

LES CONTROLES D'ACCES
    N'autorisé une personnes authentifiée que a certains roles (niveaux d'accés)

    PROTECTION :
        - La restriction d'l’URL
        - Sécurisez les contrôles d’accès :
            * Au lieu de nommer vos pages cibles avec un sens, utilisez un tableau de valeurs clés qui font référence à vos objets.
            * Modifiez les noms par défaut de vos pages web.
            * Assurez-vous que toutes les pages ont un contrôle d'authentification.
            * Personnalisez vos exceptions et vos codes d'erreur.

